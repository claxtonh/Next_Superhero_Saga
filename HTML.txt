<!DOCTYPE html>
<html lan="en">

<head>
<meta chareset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="iE=edge">
<meta name="viewport"  content="width =device-width,initial-scale= 1">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootswatch/3.3.7/superhero/bootstrap.min.css">
<link href="https://fonts.googleapis.com/css?family=Ubuntu" rel="stylesheet">
<link rel="stylesheet" href="static/css/style.css">

</head>
<body>
        <div class="container">
                <div class=="page-header">
                <h1>Comic Book Super Heros</h1>
            </div>
            <div class="jumbotron">
            <p> North Western Bootcamp Project Number 2</p>
            <p>
                    <button type="submit" class="btn btn-info btn-lg" onclick=" window.open('http://google.com','_blank')" role="button"> DC Comics </button>
                    <button type="submit" class="btn btn-info btn-lg" role="button"> Dark Hourse </button>
                    <button type="submit" class="btn btn-info btn-lg" role="button"> IDW </button>
                    <button type="submit" class="btn btn-info btn-lg" role="button"> Image Comics </button>
                    <button type="submit" class="btn btn-info btn-lg" role="button"> Marvel Comics </button>
            <div>
                <div-class"btn-group btn-group-lg" role="group">
                <button type="button" class="btn btn-default">Table</button>
                <button type="button" class="btn btn-default">Scatter</button>
                <button type="button" class="btn btn-default">Bar</button>
            </div>
            </p>
            <div class="container">
                    <div class="row margin-top-100">
                      <div class="col-md-150">
                        <aside class="filters">
                          <div class="panel panel-default">
                            <div class="panel-body">
                              <form>
                                <div class="form-group">
                                  <ul class="list-group" id="filters" >
                                    <li class="filter list-group-item" style="background-color:-black;">
                                    <!-- Event piece input -->
                                    <label for="date">Event Name</label>
                                      <input class="form-control" id="name" type="text" placeholder="Name">
                                      <!-- Date piece input -->
                                      <label for="date">Start Date</label>
                                      <input class="form-control" id="Start_Date" type="text" placeholder="yyyy-mm-dd">
                                    </li>
                                <button id="reset-btn" type="reset" class="btn btn-default btn-block btn-block">Reset Table</button>
                          </div>
                        </div>
                        <div class="container">
                        <div id="table-area" class="">
                          <table id="ufo-table" class="table table-striped">
                            <thead>
                              <tr>
                                <th class="table-head">Event Name</th>
                                <th class="table-head">Start Date</th>
                                <th class="table-head">End Date</th>
                                <th class="table-head">Narrative</th>
                              </tr>
                            </thead>
                            <tbody></tbody>
                          </table>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
</body>


<body>
  <div class="container">
    <div class="row">
      <div class="col-xs-12 col-md-12">
        <h1>Scatter Plot Space</h1>
      </div>
    </div>
    <div class="row">
      <div class="col-xs-12  col-md-9">
        <div id="scatter">
          <!-- We append our chart here. -->
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-xs-12  col-md-9">
        <div class="article">
          <h2>Correlations Discovered Between something and another thing</h2>
          <p>DA DA DA</p>

          <p>Present some findings and what they mean to the overall story</p>

          <p>some pseudo-intelligent jargon about superheroes</p>
        </div>
      </div>
    </div>
  </div>
</body>

<!-- <body>
  <script>
    var myData = [100, 125, 320, 440, 500]

    var height = 500; 
    var width = 500; 
    var barWidth = 35;
    var barOffset = 5;

    var myChart = d3.select('#chart').append('svg')
          .attr('width', width)
          .att('height', height)
          .style('background', '#f4f4f4')
          .selectAll('rect')
            .data(myData)
            .enter().append('rect')
              .style('fill', 'lightgreen')
              .attr('width', barWidth)
              .attr('height', function(d){
                return d;
              })
              .attr('x', function( d, i){
                return i * (barWidth + barOffset);
              })
              .attr('y', function(d){
                return height - d;
              })
  </script>
</body> -->

<!DOCTYPE HTML>
<html>
<head>  
<script>
window.onload = function () {
	
var chart = new CanvasJS.Chart("chartContainer", {
	animationEnabled: true,
	
	title:{
		text:"Superhero Bar - Chart Data"
	},
	axisX:{
		interval: 1
	},
	axisY2:{
		interlacedColor: "rgba(1,77,101,.2)",
		gridColor: "rgba(1,77,101,.1)",
		title: "Powers"
	},
	data: [{
		type: "bar",
		name: "powers",
		axisYType: "secondary",
		color: "#014D65",
		dataPoints: [
			{ y: 3, label: "Invisibility" },
			{ y: 7, label: "Flying" },
			{ y: 5, label: "Invincebility" },
			{ y: 9, label: "Teleportation" },
			{ y: 7, label: "Strength" },
			{ y: 7, label: "Power to Grow" },
			{ y: 9, label: "Panther Powers" },

		]
	}]
});
chart.render();

}
</script>
</head>
<body>
<div id="chartContainer" style="height: 300px; width: 100%;"></div>
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</body>
</html>


<!-- second bar chart -->
<!doctype html>
<html>
<head>
    <style>
        .bar {
            fill: rgb(22, 230, 101);
        }
    </style>
    <script src="https://d3js.org/d3.v4.min.js"></script>
<body>
<svg width="600" height="500"></svg>
<script>

    var svg = d3.select("svg"),
        margin = 200,
        width = svg.attr("width") - margin,
        height = svg.attr("height") - margin

    svg.append("text")
       .attr("transform", "translate(100,0)")
       .attr("x", 50)
       .attr("y", 50)
       .attr("font-size", "24px")
       .attr("stroke" , "white")
       .text("XYZ Superhero data")

    var xScale = d3.scaleBand().range([0, width]).padding(0.4),
        yScale = d3.scaleLinear().range([height, 0]);

    var g = svg.append("g")
               .attr("transform", "translate(" + 100 + "," + 100 + ")");

    d3.csv("testdata.csv", function(error, data) {
        if (error) {
            throw error;
        }

        xScale.domain(data.map(function(d) { return d.year; }));
        yScale.domain([0, d3.max(data, function(d) { return d.value; })]);

        g.append("g")
         .attr("transform", "translate(0," + height + ")")
         .call(d3.axisBottom(xScale))
         .append("text")
         .attr("y", height - 250)
         .attr("x", width - 100)
         .attr("text-anchor", "end")
         .attr("stroke", "white")
         .text("Power Type");

        g.append("g")
         .call(d3.axisLeft(yScale).tickFormat(function(d){
             return "$" + d;
         })
         .ticks(10))
         .append("text")
         .attr("transform", "rotate(-90)")
         .attr("y", 6)
         .attr("dy", "-5.1em")
         .attr("text-anchor", "end")
         .attr("stroke", "white")
         .text("Power Level");

        g.selectAll(".bar")
         .data(data)
         .enter().append("rect")
         .attr("class", "bar")
         .attr("x", function(d) { return xScale(d.year); })
         .attr("y", function(d) { return yScale(d.value); })
         .attr("width", xScale.bandwidth())
         .attr("height", function(d) { return height - yScale(d.value); });
    });
</script>
</body>
</html>



  <!-- <!DOCTYPE html>
  <meta charset="utf-8">
  <style>
  .node circle {
    fill: #999;
  }
  .node text {
    font: 10px sans-serif;
  }
  .node--internal circle {
    fill: #555;
  }
  .node--internal text {
    text-shadow: 0 1px 0 #fff, 0 -1px 0 #fff, 1px 0 0 #fff, -1px 0 0 #fff;
  }
  .link {
    fill: none;
    stroke: #555;
    stroke-opacity: 0.4;
    stroke-width: 1.5px;
  }
  </style>
  <svg width="960" height="2000"></svg>
  <script src="https://d3js.org/d3.v4.min.js"></script>
  <script>
  var svg = d3.select("svg"),
      width = +svg.attr("width"),
      height = +svg.attr("height"),
      g = svg.append("g").attr("transform", "translate(40,0)");
  var tree = d3.tree()
      .size([height, width - 160]);
  var stratify = d3.stratify()
      .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(".")); });
  d3.csv("testdata.csv", function(error, data) {
    if (error) throw error;
    var root = stratify(data)
        .sort(function(a, b) { return (a.height - b.height) || a.id.localeCompare(b.id); });
    var link = g.selectAll(".link")
      .data(tree(root).links())
      .enter().append("path")
        .attr("class", "link")
        .attr("d", d3.linkHorizontal()
            .x(function(d) { return d.y; })
            .y(function(d) { return d.x; }));
    var node = g.selectAll(".node")
      .data(root.descendants())
      .enter().append("g")
        .attr("class", function(d) { return "node" + (d.children ? " node--internal" : " node--leaf"); })
        .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })
    node.append("circle")
        .attr("r", 2.5);
    node.append("text")
        .attr("dy", 3)
        .attr("x", function(d) { return d.children ? -8 : 8; })
        .style("text-anchor", function(d) { return d.children ? "end" : "start"; })
        .text(function(d) { return d.id.substring(d.id.lastIndexOf(".") + 1); });
  });
  chart.render();
  </script>



 -->



















<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/4.11.0/d3.js"></script>
<script src="/testdata.csv"></script>
<script src="/super.js"></script>
</body>

</html>